<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="testTreeContextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>286, 17</value>
  </data>
  <data name="treeImages.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>453, 17</value>
  </data>
  <data name="filterToolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="filterTextToolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>141, 17</value>
  </data>
  <data name="ResetFilter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>